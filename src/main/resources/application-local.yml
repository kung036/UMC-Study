spring:
  datasource:
    url: jdbc:mysql://localhost:3306/daangndb
    username: ${LOCALHOST_MYSQL_USER}
    password: ${LOCALHOST_MYSQL_PW}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: update
#      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
#  aop: # JDK Dynamic Proxy
#    proxy-target-class: false
  security:
    oauth2:
      client:
        registration:
          google:
            clientId: ${GOOGLE_OAUTH_ID}
            clientSecret: ${GOOGLE_OAUTH_PW}
            scope:
              - email
              - profile
          kakao:
            clientId: ${KAKAO_OAUTH_ID}
            clientSecret: ${KAKAO_OAUTH_PW}
            scope:
              - profile_nickname
              - profile_image
              - account_email
              - name
            client-name: Kakao
            authorization-grant-type: authorization_code
            redirect-uri: http://localhost:8080/login/oauth2/code/kakao
            client-authentication-method: POST
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

# KAKAO API 로그인
# https://lotuus.tistory.com/104
# https://velog.io/@shwncho/Spring-Boot-%EC%B9%B4%EC%B9%B4%EC%98%A4-%EB%A1%9C%EA%B7%B8%EC%9D%B8-APIoAuth-2.0
# https://developers.kakao.com/console/app/923128/product/login/scope

server:
  servlet:
    encoding:
      force-response: true

mail:
  address:
    admin: admin@gmail.com
jwt:
  key:
    secret: ${JWT_SECRET_KEY}               # 민감한 정보는 시스템 환경 변수에서 로드한다.
  access-token-expiration-minutes: 30
  refresh-token-expiration-minutes: 420

logging:
  level:
    org:
      springframework:
        orm:
          jpa: DEBUG